// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Enum for user roles
enum UserRole {
  ADMIN
  LIBRARIAN
  MEMBER
}

enum ReservationStatus {
  PENDING    // Waiting for book to be available
  COMPLETED  // Book is collected
  CANCELED   // User canceled the reservation
  EXPIRED    // Auto-canceled due to timeout
}

model User {
  id String @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  role        UserRole     @default(MEMBER)
  blocked     Boolean      @default(false) 
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  loans       Loan[]
  reservations Reservation[]
}

model Book {
  id          String @id @default(uuid())
  title       String
  author      String
  genre       String
  isbn        String       @unique
  available   Boolean      @default(true)
  reservations Reservation[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())

  Loan Loan[]
}

model Loan {
  id         String @id @default(uuid())
  userId     String
  bookId     String
  borrowedAt DateTime      @default(now())
  dueDate    DateTime
  returnedAt DateTime?
  fine       Float         @default(0)
  
  user       User         @relation(fields: [userId], references: [id])
  book       Book         @relation(fields: [bookId], references: [id])
}

model Reservation {
  id         String @id @default(uuid())
  userId     String
  bookId     String
  reservedAt DateTime      @default(now())
  status     ReservationStatus @default(PENDING)

  user       User         @relation(fields: [userId], references: [id])
  book       Book         @relation(fields: [bookId], references: [id])
}
